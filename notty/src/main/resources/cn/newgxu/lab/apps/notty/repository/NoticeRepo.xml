<?xml version="1.0" encoding="utf-8" ?>
<!--
  ~ The MIT License (MIT)
  ~ Copyright (c) 2013 newgxu.cn <the original author or authors>.
  ~ The software shall be used for good, not evil.
  ~ create by longkai@2013-8-1
  -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.newgxu.lab.apps.notty.repository.NoticeRepo">
    <cache />

    <resultMap id="notice" type="notice">
        <id property="id" column="id" javaType="_long" />
        <result property="addDate" column="add_date" />
        <result property="blocked" column="blocked" />
        <result property="clickTimes" column="click_times" />
        <result property="content" column="content" />
        <result property="docName" column="doc_name" />
        <result property="docUrl" column="doc_url" />
        <result property="lastModifiedDate" column="last_modified_date" />
        <result property="title" column="title" />
        <association property="author" resultMap="author" />
    </resultMap>

    <resultMap id="author" type="auth_user">
        <id property="id" column="uid" />
        <result property="admin" column="u_is_admin" />
        <result property="authorizedName" column="u_authed_name" />
        <result property="org" column="u_org" />
        <result property="about" column="u_about" />
        <result property="contact" column="u_contact" />
        <result property="joinDate" column="u_join_date" />
        <result property="blocked" column="u_blocked" />
        <result property="account" column="u_account" />
        <result property="password" column="u_password" />
        <result property="lastLoginIP" column="u_last_login_ip" />
        <result property="lastLoginDate" column="u_last_login_date" />
        <result property="lastModifiedDate" column="u_last_modified_date" />
    </resultMap>

    <sql id="notice_columns">
        N.id,
        N.add_date,
        N.blocked,
        N.click_times,
        N.content,
        N.doc_name,
        N.doc_url,
        N.last_modified_date,
        N.title,
        N.uid
    </sql>

    <sql id="auth_user_columns">
        U.is_admin as u_is_admin,
        U.authed_name as u_authed_name,
        U.org as u_org,
        U.about as u_about,
        U.contact as u_contact,
        U.join_date as u_join_date,
        U.blocked as u_blocked,
        U.account as u_account,
        U.password as u_password,
        U.last_login_ip as u_last_login_ip,
        U.last_login_date as u_last_login_date,
        U.last_modified_date as u_last_modified_date
    </sql>

    <insert id="insert" parameterType="notice" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
        INSERT INTO notices
            (id, add_date, blocked, click_times, content, doc_name, doc_url, last_modified_date, title, uid)
        VALUES
            (null, #{addDate}, 0, 0, #{content}, #{docName}, #{docUrl}, null, #{title}, #{author.id})
    </insert>

    <select id="find" parameterType="_int" resultMap="notice">
        SELECT
        <include refid="notice_columns" />
        ,
        <include refid="auth_user_columns" />
        FROM
        notices N JOIN auth_users U ON N.uid = U.id
        WHERE N.id = #{id}
    </select>

    <select id="count" resultType="_long">
        SELECT COUNT(1) FROM
        <choose>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                notices
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
    </select>

    <delete id="delete">
        DELETE FROM
        <choose>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                notices
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
    </delete>

    <update id="update">
        UPDATE notices SET ${update} WHERE ${where}
    </update>

    <select id="findOne" resultMap="notice">
        SELECT
        <choose>
            <when test="columns != null">
                ${columns}
            </when>
            <when test="@cn.newgxu.lab.util.SQLUtils@isWildCard(columns)">
                *
            </when>
            <otherwise>
                <include refid="notice_columns" />
                ,
                <include refid="auth_user_columns" />
            </otherwise>
        </choose>
        FROM
        <choose>
            <when test="from == null and @cn.newgxu.lab.util.SQLUtils@isWildCard(columns)">
                notices as N
            </when>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                notices N JOIN auth_users U ON N.uid = U.id
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
    </select>

    <select id="query" resultMap="notice">
        SELECT
        <choose>
            <when test="columns != null">
                ${columns}
            </when>
            <when test="@cn.newgxu.lab.util.SQLUtils@isWildCard(columns)">
                *
            </when>
            <otherwise>
                <include refid="notice_columns" />
                ,
                <include refid="auth_user_columns" />
            </otherwise>
        </choose>
        FROM
        <choose>
            <when test="from == null and @cn.newgxu.lab.util.SQLUtils@isWildCard(columns)">
                notices as N
            </when>
            <when test="from != null">
                ${from}
            </when>
            <otherwise>
                notices N JOIN auth_users U ON N.uid = U.id
            </otherwise>
        </choose>
        <if test="where != null">
            WHERE ${where}
        </if>
        <if test="groupBy != null">
            GROUP BY ${groupBy}
        </if>
        <if test="having != null">
            HAVING ${having}
        </if>
        <if test="orderBy != null">
            ORDER BY ${orderBy}
        </if>
        <if test="limit != null">
            LIMIT ${limit}
        </if>
    </select>
</mapper>