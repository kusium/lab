<?xml version="1.0" encoding="utf-8" ?>
<!--
  ~ The MIT License (MIT)
  ~ Copyright (c) 2013 longkai(龙凯)
  ~ The software shall be used for good, not evil.
  -->
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.newgxu.lab.support.member.MemberRepo">
	<cache />

	<insert id="insert" useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		INSERT INTO members
		(id, uid, comefrom, nick, label, invalid, contact, description, participate_date, last_modified_date)
		VALUES
			(null, #{uid}, #{comefrom}, #{nick}, #{label}, 0, #{contact}, #{description},
			 #{participate_date}, null);
	</insert>

	<select id="find" parameterType="_long" resultType="member">
		SELECT
			*
		FROM members
		WHERE id = #{id}
	</select>

	<select id="count" resultType="_long">
		SELECT COUNT(1) FROM
		<choose>
			<when test="from != null">
				${from}
			</when>
			<otherwise>
				members
			</otherwise>
		</choose>
		<if test="where != null">
			WHERE ${where}
		</if>
	</select>

	<delete id="delete">
		DELETE FROM
		<choose>
			<when test="from != null">
				${from}
			</when>
			<otherwise>
				members
			</otherwise>
		</choose>
		<if test="where != null">
			WHERE ${where}
		</if>
	</delete>

	<update id="update">
		UPDATE members
		SET ${update}
		WHERE ${where}
	</update>

	<select id="findOne" resultType="member">
		SELECT
		<choose>
			<when test="columns != null">
				${columns}
			</when>
			<otherwise>
				*
			</otherwise>
		</choose>
		FROM
		<choose>
			<when test="from != null">
				${from}
			</when>
			<otherwise>
				members
			</otherwise>
		</choose>
		<if test="where != null">
			WHERE ${where}
		</if>
	</select>

	<select id="query" resultType="member">
		SELECT
		<choose>
			<when test="columns == null">
				*
			</when>
			<otherwise>
				${columns}
			</otherwise>
		</choose>
		FROM
		<choose>
			<when test="from != null">
				${from}
			</when>
			<otherwise>
				members
			</otherwise>
		</choose>
		<if test="where != null">
			WHERE ${where}
		</if>
		<if test="groupBy != null">
			GROUP BY ${groupBy}
		</if>
		<if test="having != null">
			HAVING ${having}
		</if>
		<if test="orderBy != null">
			ORDER BY ${orderBy}
		</if>
		<if test="limit != null">
			LIMIT ${limit}
		</if>
	</select>

</mapper>